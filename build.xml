<?xml version="1.0" encoding="UTF-8"?>
<project name="your-fresh-wep-app" default="build">

    <property name="basedir"  value="." override="true" />
    <resolvepath propertyName="absolutebasedir" file="${basedir}" />

    <property name="vendorbin" value="${absolutebasedir}/vendor/bin" />
    <property name="srcdir" value="${absolutebasedir}/src" />
    <property name="testsdir" value="${absolutebasedir}/tests" />
    <property name="builddir" value="${absolutebasedir}/build" />
    <property name="publicdir" value="${absolutebasedir}/public" />

    <!-- Load config file -->
    <property file="${absolutebasedir}/config/config.file" />

    <!-- Default target: -->
    <target name="build" description="Build project.">
        <echo msg="Hey there. No one has not setup any build magic ... :(" level="error" />
    </target>

    <!-- Main targets: -->
    <target name="assets-publish" description="Publish assets installed via composer.">

        <echo msg="Cleaning up ${publicdir}/assets/vendor directory." />
        <delete dir="${publicdir}/assets/vendor" includeemptydirs="true" quiet="true" />
        <mkdir dir="${publicdir}/assets/vendor" />

        <echo msg="Publishing jquery." />

        <mkdir dir="${publicdir}/assets/vendor/jquery" />
        <copy todir="${publicdir}/assets/vendor/jquery/js">
            <fileset dir="${absolutebasedir}/vendor/components/jquery" />
        </copy>

        <echo msg="Publishing twitter bootstrap." />
        <mkdir dir="${publicdir}/assets/vendor/bootstrap" />
        <copy todir="${publicdir}/assets/vendor/bootstrap/css">
            <fileset dir="${absolutebasedir}/vendor/twbs/bootstrap/dist/css" />
        </copy>
        <copy todir="${publicdir}/assets/vendor/bootstrap/fonts">
            <fileset dir="${absolutebasedir}/vendor/twbs/bootstrap/dist/fonts" />
        </copy>
        <copy todir="${publicdir}/assets/vendor/bootstrap/js">
            <fileset dir="${absolutebasedir}/vendor/twbs/bootstrap/dist/js" />
        </copy>

    </target>

    <target name="check-style" description="Find coding standard violations using PHP CodeSniffer.">
        <phpcodesniffer
            standard="${absolutebasedir}/phpcs.xml"
            format="full"
            showSniffs="true"
            haltonerror="true">
            <fileset dir="${srcdir}">
                <include name="**/*.php"/>
            </fileset>
            <fileset dir="${testsdir}">
                <include name="**/*.php"/>
            </fileset>
        </phpcodesniffer>
    </target>

    <target name="compress" description="Compress source files to zip archive." depends="prepare">
        <echo msg="Compressing project to zip archive." />
        <echo msg="This takes a while..." />

        <property name="buildpackage"  value="${builddir}/${phing.project.name}_build.zip" />

        <zip destfile="${buildpackage}">
            <fileset dir=".">
                <include name="config/**/**" />
                <excluce name="config/config.file" />
                <include name="logs/**/**" />
                <exclude name="**/*.log"/>
                <include name="public/**/**" />
                <include name="src/**/**" />
                <include name="vendor/**/**" />
                <include name="views/**/**" />
            </fileset>
        </zip>
    </target>

    <target name="install" depends="create-local-config, assets-publish" description="Install project." />

    <target name="lint" description="Perform syntax check of sourcecode files with php lint.">
        <phplint haltonfailure="true" deprecatedAsError="true">
            <fileset dir="${srcdir}">
                <include name="**/*.php"/>
            </fileset>
            <fileset dir="${testsdir}">
                <include name="**/*.php"/>
            </fileset>
        </phplint>
    </target>

    <target name="migration-create" description="Create new empty migration file.">
        <propertyprompt propertyName="migrationname" defaultValue="give_a_meaningful_name_in_snake_case" promptText="Enter name for the migration" />
        <tstamp>
            <format property="DATETIME" pattern="%Y%m%d_%H%M%S" />
        </tstamp>
        <touch file="${absolutebasedir}/config/migrations/${DATETIME}_${migrationname}.sql" />
    </target>

    <target name="migration-run-all" description="Run every migration.">
        <apply executable="mysql" parallel="false" passthru="true" checkreturn="false">
            <arg line="-h${DB_HOST}" />
            <arg line="-u${DB_USER}" />
            <arg line="-p${DB_PASS}" />
            <arg line="${DB_NAME}" />
            <arg value="&lt;" />
            <srcfile />
            <fileset dir="${absolutebasedir}/config/migrations">
                <include name="*.sql" />
            </fileset>
        </apply>
    </target>

    <target name="test" description="Run all unit tests with PHPUnit.">
        <phpunit
            haltonfailure="true"
            haltonerror="true"
            configuration="${absolutebasedir}/phpunit.xml">
            <formatter type="plain" usefile="false"/>
            <batchtest>
                <fileset dir="${testsdir}/Unit">
                    <include name="**/*Test*.php"/>
                </fileset>
            </batchtest>
        </phpunit>
    </target>

    <!-- Subtargets: -->
    <target name="clean">
        <delete dir="${builddir}" includeemptydirs="true" quiet="true" />
    </target>

    <target name="create-local-config">
        <copy file="${absolutebasedir}/config/config.file.example" tofile="${absolutebasedir}/config/config.file" />
    </target>

    <target name="prepare" depends="clean">
        <mkdir dir="${builddir}" />
    </target>

</project>
